{"version":3,"sources":["TapGestureHandler.ts"],"names":["DEFAULT_MAX_DURATION_MS","DEFAULT_MAX_DELAY_MS","DEFAULT_NUMBER_OF_TAPS","DEFAULT_MIN_NUMBER_OF_POINTERS","TapGestureHandler","GestureHandler","Number","MIN_SAFE_INTEGER","init","ref","propsRef","setShouldCancelWhenOutside","updateGestureConfig","enabled","props","config","numberOfTaps","undefined","maxDurationMs","maxDelayMs","maxDeltaX","maxDeltaY","maxDistSq","minPointers","minNumberOfPointers","resetConfig","transformNativeEvent","event","x","offsetX","y","offsetY","absoluteX","absoluteY","clearTimeouts","clearTimeout","waitTimeout","delayTimeout","startTap","setTimeout","fail","endTap","tapsSoFar","currentMaxNumberOfPointers","activate","onPointerDown","tracker","addToTracker","trySettingPosition","getTrackedPointersCount","onPointerAdd","lastX","getLastAvgX","lastY","getLastAvgY","updateState","_event","startX","startY","onPointerUp","removeFromTracker","pointerId","onPointerRemove","onPointerMove","onPointerOutOfBounds","onPointerCancel","resetTracker","shouldFail","currentState","State","UNDETERMINED","eventType","EventTypes","DOWN","begin","BEGAN","UP","dx","Math","abs","dy","dist","isAwaiting","end","onCancel","resetProgress"],"mappings":"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","sourcesContent":["import { State } from '../../State';\nimport { AdaptedPointerEvent, EventTypes } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MAX_DURATION_MS = 500;\nconst DEFAULT_MAX_DELAY_MS = 200;\nconst DEFAULT_NUMBER_OF_TAPS = 1;\nconst DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\n\nexport default class TapGestureHandler extends GestureHandler {\n  private maxDeltaX = Number.MIN_SAFE_INTEGER;\n  private maxDeltaY = Number.MIN_SAFE_INTEGER;\n  private maxDistSq = Number.MIN_SAFE_INTEGER;\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private maxDelayMs = DEFAULT_MAX_DELAY_MS;\n\n  private numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n  private minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  private currentMaxNumberOfPointers = 1;\n\n  private startX = 0;\n  private startY = 0;\n  private offsetX = 0;\n  private offsetY = 0;\n  private lastX = 0;\n  private lastY = 0;\n\n  private waitTimeout: number | undefined;\n  private delayTimeout: number | undefined;\n\n  private tapsSoFar = 0;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n    this.setShouldCancelWhenOutside(true);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    this.enabled = enabled;\n\n    if (this.config.numberOfTaps !== undefined) {\n      this.numberOfTaps = this.config.numberOfTaps;\n    }\n\n    if (this.config.maxDurationMs !== undefined) {\n      this.maxDurationMs = this.config.maxDurationMs;\n    }\n\n    if (this.config.maxDelayMs !== undefined) {\n      this.maxDelayMs = this.config.maxDelayMs;\n    }\n\n    if (this.config.maxDeltaX !== undefined) {\n      this.maxDeltaX = this.config.maxDeltaX;\n    }\n\n    if (this.config.maxDeltaY !== undefined) {\n      this.maxDeltaY = this.config.maxDeltaY;\n    }\n\n    if (this.config.maxDistSq !== undefined) {\n      this.maxDistSq = this.config.maxDistSq;\n    }\n\n    if (this.config.minPointers !== undefined) {\n      this.minNumberOfPointers = this.config.minPointers;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n\n    this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  }\n\n  protected transformNativeEvent(event: AdaptedPointerEvent) {\n    return {\n      x: event.offsetX,\n      y: event.offsetY,\n      absoluteX: event.x,\n      absoluteY: event.y,\n    };\n  }\n\n  private clearTimeouts(): void {\n    clearTimeout(this.waitTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  private startTap(event: AdaptedPointerEvent): void {\n    this.clearTimeouts();\n\n    this.waitTimeout = setTimeout(() => this.fail(event), this.maxDurationMs);\n  }\n\n  private endTap(event: AdaptedPointerEvent): void {\n    this.clearTimeouts();\n\n    if (\n      ++this.tapsSoFar === this.numberOfTaps &&\n      this.currentMaxNumberOfPointers >= this.minNumberOfPointers\n    ) {\n      this.activate(event);\n    } else {\n      this.delayTimeout = setTimeout(() => this.fail(event), this.maxDelayMs);\n    }\n  }\n\n  //Handling Events\n  protected onPointerDown(event: AdaptedPointerEvent): void {\n    super.onPointerDown(event);\n    this.tracker.addToTracker(event);\n\n    this.trySettingPosition(event);\n\n    if (this.tracker.getTrackedPointersCount() > 1) {\n      this.onPointerAdd(event);\n    } else {\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n    }\n    this.updateState(event);\n  }\n\n  protected onPointerAdd(_event: AdaptedPointerEvent): void {\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n  }\n\n  protected onPointerUp(event: AdaptedPointerEvent): void {\n    if (this.tracker.getTrackedPointersCount() > 1) {\n      this.tracker.removeFromTracker(event.pointerId);\n\n      this.onPointerRemove(event);\n    } else {\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n\n      this.tracker.removeFromTracker(event.pointerId);\n    }\n\n    this.updateState(event);\n  }\n\n  protected onPointerRemove(_event: AdaptedPointerEvent): void {\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n  }\n\n  protected onPointerMove(event: AdaptedPointerEvent): void {\n    this.trySettingPosition(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n  }\n  protected onPointerOutOfBounds(event: AdaptedPointerEvent): void {\n    this.trySettingPosition(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n  }\n\n  protected onPointerCancel(event: AdaptedPointerEvent): void {\n    this.tracker.resetTracker();\n    this.fail(event);\n  }\n\n  private updateState(event: AdaptedPointerEvent): void {\n    if (\n      this.currentMaxNumberOfPointers < this.tracker.getTrackedPointersCount()\n    ) {\n      this.currentMaxNumberOfPointers = this.tracker.getTrackedPointersCount();\n    }\n\n    if (this.shouldFail()) {\n      this.fail(event);\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.UNDETERMINED:\n        if (event.eventType === EventTypes.DOWN) {\n          this.begin(event);\n        }\n        this.startTap(event);\n        break;\n      case State.BEGAN:\n        if (event.eventType === EventTypes.UP) {\n          this.endTap(event);\n        }\n        if (event.eventType === EventTypes.DOWN) {\n          this.startTap(event);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private trySettingPosition(event: AdaptedPointerEvent): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private shouldFail(): boolean {\n    const dx = this.lastX - this.startX + this.offsetX;\n    if (\n      this.maxDeltaX !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dx) > this.maxDeltaX\n    ) {\n      return true;\n    }\n\n    const dy = this.lastY - this.startY + this.offsetY;\n    if (\n      this.maxDeltaY !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dy) > this.maxDeltaY\n    ) {\n      return true;\n    }\n\n    const dist = dy * dy + dx * dx;\n\n    return this.maxDistSq !== Number.MIN_SAFE_INTEGER && dist > this.maxDistSq;\n  }\n\n  protected activate(event: AdaptedPointerEvent): void {\n    super.activate(event);\n\n    if (!this.isAwaiting()) {\n      this.end(event);\n    }\n  }\n\n  protected onCancel(): void {\n    this.resetProgress();\n    this.clearTimeouts();\n  }\n\n  protected resetProgress(): void {\n    this.tapsSoFar = 0;\n    this.currentMaxNumberOfPointers = 0;\n  }\n}\n"]}