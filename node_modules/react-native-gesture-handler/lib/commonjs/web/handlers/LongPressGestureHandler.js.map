{"version":3,"sources":["LongPressGestureHandler.ts"],"names":["DEFAULT_MIN_DURATION_MS","DEFAULT_MAX_DIST_DP","SCALING_FACTOR","LongPressGestureHandler","GestureHandler","defaultMaxDistSq","init","ref","propsRef","setShouldCancelWhenOutside","transformNativeEvent","event","x","offsetX","y","offsetY","absoluteX","absoluteY","duration","Date","now","startTime","updateGestureConfig","enabled","props","config","minDurationMs","undefined","maxDist","maxDistSq","resetConfig","onStateChange","_newState","_oldState","clearTimeout","activationTimeout","onPointerDown","tryBegin","tryActivate","checkDistanceFail","onPointerUp","currentState","State","ACTIVE","end","fail","onPointerMove","UNDETERMINED","previousTime","begin","startX","startY","setTimeout","activate","dx","dy","distSq","cancel"],"mappings":";;;;;;;AAAA;;AAGA;;;;;;AAEA,MAAMA,uBAAuB,GAAG,GAAhC;AACA,MAAMC,mBAAmB,GAAG,EAA5B;AACA,MAAMC,cAAc,GAAG,EAAvB;;AAEe,MAAMC,uBAAN,SAAsCC,uBAAtC,CAAqD;AAAA;AAAA;;AAAA,2CAC1CJ,uBAD0C;;AAAA,8CAEvCC,mBAAmB,GAAGC,cAFiB;;AAAA,uCAI9C,KAAKG,gBAJyC;;AAAA,oCAKjD,CALiD;;AAAA,oCAMjD,CANiD;;AAAA,uCAQ9C,CAR8C;;AAAA,0CAS3C,CAT2C;;AAAA;AAAA;;AAa3DC,EAAAA,IAAI,CAACC,GAAD,EAAcC,QAAd,EAAkD;AAC3D,UAAMF,IAAN,CAAWC,GAAX,EAAgBC,QAAhB;AACA,SAAKC,0BAAL,CAAgC,IAAhC;AACD;;AAESC,EAAAA,oBAAoB,CAACC,KAAD,EAA6B;AACzD,WAAO;AACLC,MAAAA,CAAC,EAAED,KAAK,CAACE,OADJ;AAELC,MAAAA,CAAC,EAAEH,KAAK,CAACI,OAFJ;AAGLC,MAAAA,SAAS,EAAEL,KAAK,CAACC,CAHZ;AAILK,MAAAA,SAAS,EAAEN,KAAK,CAACG,CAJZ;AAKLI,MAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL,KAAa,KAAKC;AALvB,KAAP;AAOD;;AAEMC,EAAAA,mBAAmB,CAAC;AAAEC,IAAAA,OAAO,GAAG,IAAZ;AAAkB,OAAGC;AAArB,GAAD,EAAqC;AAC7D,UAAMF,mBAAN,CAA0B;AAAEC,MAAAA,OAAO,EAAEA,OAAX;AAAoB,SAAGC;AAAvB,KAA1B;AAEA,SAAKD,OAAL,GAAeA,OAAf;;AAEA,QAAI,KAAKE,MAAL,CAAYC,aAAZ,KAA8BC,SAAlC,EAA6C;AAC3C,WAAKD,aAAL,GAAqB,KAAKD,MAAL,CAAYC,aAAjC;AACD;;AAED,QAAI,KAAKD,MAAL,CAAYG,OAAZ,KAAwBD,SAA5B,EAAuC;AACrC,WAAKE,SAAL,GAAiB,KAAKJ,MAAL,CAAYG,OAAZ,GAAsB,KAAKH,MAAL,CAAYG,OAAnD;AACD;AACF;;AAESE,EAAAA,WAAW,GAAS;AAC5B,UAAMA,WAAN;AACA,SAAKJ,aAAL,GAAqB1B,uBAArB;AACA,SAAK6B,SAAL,GAAiB,KAAKxB,gBAAtB;AACD;;AAES0B,EAAAA,aAAa,CAACC,SAAD,EAAmBC,SAAnB,EAA2C;AAChEC,IAAAA,YAAY,CAAC,KAAKC,iBAAN,CAAZ;AACD;;AAESC,EAAAA,aAAa,CAACzB,KAAD,EAAmC;AACxD,UAAMyB,aAAN,CAAoBzB,KAApB;AACA,SAAK0B,QAAL,CAAc1B,KAAd;AACA,SAAK2B,WAAL,CAAiB3B,KAAjB;AACA,SAAK4B,iBAAL,CAAuB5B,KAAvB;AACD;;AAES6B,EAAAA,WAAW,CAAC7B,KAAD,EAAmC;AACtD,UAAM6B,WAAN,CAAkB7B,KAAlB;;AAEA,QAAI,KAAK8B,YAAL,KAAsBC,aAAMC,MAAhC,EAAwC;AACtC,WAAKC,GAAL,CAASjC,KAAT;AACD,KAFD,MAEO;AACL,WAAKkC,IAAL,CAAUlC,KAAV;AACD;AACF;;AAESmC,EAAAA,aAAa,CAACnC,KAAD,EAAmC;AACxD,SAAK4B,iBAAL,CAAuB5B,KAAvB;AACD;;AAEO0B,EAAAA,QAAQ,CAAC1B,KAAD,EAAmC;AACjD,QAAI,KAAK8B,YAAL,KAAsBC,aAAMK,YAAhC,EAA8C;AAC5C;AACD;;AAED,SAAKC,YAAL,GAAoB7B,IAAI,CAACC,GAAL,EAApB;AACA,SAAKC,SAAL,GAAiB,KAAK2B,YAAtB;AAEA,SAAKC,KAAL,CAAWtC,KAAX;AAEA,SAAKuC,MAAL,GAAcvC,KAAK,CAACC,CAApB;AACA,SAAKuC,MAAL,GAAcxC,KAAK,CAACG,CAApB;AACD;;AAEOwB,EAAAA,WAAW,CAAC3B,KAAD,EAAmC;AACpD,QAAI,KAAKe,aAAL,GAAqB,CAAzB,EAA4B;AAC1B,WAAKS,iBAAL,GAAyBiB,UAAU,CAAC,MAAM;AACxC,aAAKC,QAAL,CAAc1C,KAAd;AACD,OAFkC,EAEhC,KAAKe,aAF2B,CAAnC;AAGD,KAJD,MAIO,IAAI,KAAKA,aAAL,KAAuB,CAA3B,EAA8B;AACnC,WAAK2B,QAAL,CAAc1C,KAAd;AACD;AACF;;AAEO4B,EAAAA,iBAAiB,CAAC5B,KAAD,EAAmC;AAC1D,UAAM2C,EAAE,GAAG3C,KAAK,CAACC,CAAN,GAAU,KAAKsC,MAA1B;AACA,UAAMK,EAAE,GAAG5C,KAAK,CAACG,CAAN,GAAU,KAAKqC,MAA1B;AACA,UAAMK,MAAM,GAAGF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAA9B;;AAEA,QAAIC,MAAM,IAAI,KAAK3B,SAAnB,EAA8B;AAC5B;AACD;;AAED,QAAI,KAAKY,YAAL,KAAsBC,aAAMC,MAAhC,EAAwC;AACtC,WAAKc,MAAL,CAAY9C,KAAZ;AACD,KAFD,MAEO;AACL,WAAKkC,IAAL,CAAUlC,KAAV;AACD;AACF;;AA/GiE","sourcesContent":["import { State } from '../../State';\nimport { AdaptedPointerEvent } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MIN_DURATION_MS = 500;\nconst DEFAULT_MAX_DIST_DP = 10;\nconst SCALING_FACTOR = 10;\n\nexport default class LongPressGestureHandler extends GestureHandler {\n  private minDurationMs = DEFAULT_MIN_DURATION_MS;\n  private defaultMaxDistSq = DEFAULT_MAX_DIST_DP * SCALING_FACTOR;\n\n  private maxDistSq = this.defaultMaxDistSq;\n  private startX = 0;\n  private startY = 0;\n\n  private startTime = 0;\n  private previousTime = 0;\n\n  private activationTimeout: number | undefined;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n    this.setShouldCancelWhenOutside(true);\n  }\n\n  protected transformNativeEvent(event: AdaptedPointerEvent) {\n    return {\n      x: event.offsetX,\n      y: event.offsetY,\n      absoluteX: event.x,\n      absoluteY: event.y,\n      duration: Date.now() - this.startTime,\n    };\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    this.enabled = enabled;\n\n    if (this.config.minDurationMs !== undefined) {\n      this.minDurationMs = this.config.minDurationMs;\n    }\n\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n    this.minDurationMs = DEFAULT_MIN_DURATION_MS;\n    this.maxDistSq = this.defaultMaxDistSq;\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {\n    clearTimeout(this.activationTimeout);\n  }\n\n  protected onPointerDown(event: AdaptedPointerEvent): void {\n    super.onPointerDown(event);\n    this.tryBegin(event);\n    this.tryActivate(event);\n    this.checkDistanceFail(event);\n  }\n\n  protected onPointerUp(event: AdaptedPointerEvent): void {\n    super.onPointerUp(event);\n\n    if (this.currentState === State.ACTIVE) {\n      this.end(event);\n    } else {\n      this.fail(event);\n    }\n  }\n\n  protected onPointerMove(event: AdaptedPointerEvent): void {\n    this.checkDistanceFail(event);\n  }\n\n  private tryBegin(event: AdaptedPointerEvent): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.previousTime = Date.now();\n    this.startTime = this.previousTime;\n\n    this.begin(event);\n\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private tryActivate(event: AdaptedPointerEvent): void {\n    if (this.minDurationMs > 0) {\n      this.activationTimeout = setTimeout(() => {\n        this.activate(event);\n      }, this.minDurationMs);\n    } else if (this.minDurationMs === 0) {\n      this.activate(event);\n    }\n  }\n\n  private checkDistanceFail(event: AdaptedPointerEvent): void {\n    const dx = event.x - this.startX;\n    const dy = event.y - this.startY;\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq <= this.maxDistSq) {\n      return;\n    }\n\n    if (this.currentState === State.ACTIVE) {\n      this.cancel(event);\n    } else {\n      this.fail(event);\n    }\n  }\n}\n"]}