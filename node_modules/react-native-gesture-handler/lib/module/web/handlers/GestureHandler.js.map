{"version":3,"sources":["GestureHandler.ts"],"names":["findNodeHandle","State","EventManager","GestureHandlerOrchestrator","PointerTracker","GestureHandler","constructor","UNDETERMINED","enabled","event","newState","oldState","onGestureHandlerEvent","onGestureHandlerStateChange","propsRef","current","resultEvent","transformEventData","lastSentState","invokeNullableMethod","currentState","ACTIVE","nativeEvent","undefined","hasCustomActivationCriteria","init","ref","setView","setEventManager","view","style","eventManager","setOnPointerDown","onPointerDown","bind","setOnPointerUp","onPointerUp","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerOut","onPointerOut","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setListeners","setInteractionManager","manager","interactionManager","onCancel","onReset","resetProgress","reset","tracker","resetTracker","moveToState","getInstance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","FAILED","cancel","CANCELLED","activate","_force","end","END","isAwaiting","awaiting","setAwaiting","value","isActive","active","setActive","getShouldResetProgress","shouldResetProgress","setShouldResetProgress","getActivationIndex","activationIndex","setActivationIndex","shouldWaitForHandlerFailure","handler","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","_event","recordHandlerIfNotPresent","onPointerAdd","onPointerRemove","tryToSendMoveEvent","out","shouldCancellWhenOutside","sendEvent","numberOfPointers","getTrackedPointersCount","state","pointerInside","isPointerInBounds","x","y","transformNativeEvent","handlerTag","target","timeStamp","Date","now","updateGestureConfig","props","config","validateHitSlops","checkCustomActivationCriteria","criterias","key","indexOf","hitSlop","left","right","width","Error","height","top","bottom","getBoundingClientRect","horizontal","vertical","offsetX","offsetY","resetConfig","getTag","setTag","tag","getConfig","getShouldEnableGestureOnSetup","getView","getEventManager","getTracker","getTrackedPointersID","getState","setShouldCancelWhenOutside","flag","getShouldCancelWhenOutside","method","__getHandler","argMapping","__nodeConfig","Array","isArray","index","entries","nativeValue","setValue"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { findNodeHandle } from 'react-native';\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedPointerEvent,\n  PropsRef,\n  ResultEvent,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerTracker from '../tools/PointerTracker';\n\nexport default abstract class GestureHandler {\n  private lastSentState: State | null = null;\n  protected currentState: State = State.UNDETERMINED;\n\n  protected shouldCancellWhenOutside = false;\n  protected hasCustomActivationCriteria: boolean;\n  protected enabled = false;\n\n  private ref!: number;\n  private propsRef!: React.RefObject<unknown>;\n  protected config: Config = { enabled: false };\n  private handlerTag!: number;\n  protected view: HTMLElement | null = null;\n\n  protected eventManager!: EventManager;\n  protected tracker: PointerTracker = new PointerTracker();\n  protected interactionManager!: InteractionManager;\n\n  // Orchestrator properties\n  protected activationIndex = 0;\n  protected awaiting = false;\n  protected active = false;\n  protected shouldResetProgress = false;\n\n  public constructor() {\n    this.hasCustomActivationCriteria = false;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(ref: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.ref = ref;\n\n    this.currentState = State.UNDETERMINED;\n\n    this.setView(ref);\n    this.setEventManager();\n  }\n\n  private setView(ref: number) {\n    if (!ref) {\n      this.view = null;\n      return;\n    }\n\n    this.view = (findNodeHandle(ref) as unknown) as HTMLElement;\n    this.view.style['touchAction'] = 'none';\n    this.view.style['webkitUserSelect'] = 'none';\n    this.view.style['userSelect'] = 'none';\n\n    //@ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = 'none';\n  }\n\n  private setEventManager(): void {\n    if (!this.view) {\n      return;\n    }\n\n    this.eventManager = new EventManager(this.view);\n\n    this.eventManager.setOnPointerDown(this.onPointerDown.bind(this));\n    this.eventManager.setOnPointerUp(this.onPointerUp.bind(this));\n    this.eventManager.setOnPointerMove(this.onPointerMove.bind(this));\n    this.eventManager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    this.eventManager.setOnPointerOut(this.onPointerOut.bind(this));\n    this.eventManager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    this.eventManager.setOnPointerOutOfBounds(\n      this.onPointerOutOfBounds.bind(this)\n    );\n\n    this.eventManager.setListeners();\n  }\n\n  public setInteractionManager(manager: InteractionManager): void {\n    this.interactionManager = manager;\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.currentState = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, event: AdaptedPointerEvent) {\n    if (this.currentState === newState) {\n      return;\n    }\n\n    const oldState = this.currentState;\n    this.currentState = newState;\n\n    GestureHandlerOrchestrator.getInstance().onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      event\n    );\n\n    this.onStateChange(newState, oldState);\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(event: AdaptedPointerEvent): void {\n    if (!this.checkHitSlop(event)) {\n      return;\n    }\n\n    if (this.currentState === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN, event);\n    }\n  }\n\n  public fail(event: AdaptedPointerEvent): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.BEGAN\n    ) {\n      this.moveToState(State.FAILED, event);\n    }\n\n    this.resetProgress();\n  }\n\n  public cancel(event: AdaptedPointerEvent): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.onCancel();\n      this.moveToState(State.CANCELLED, event);\n    }\n  }\n\n  protected activate(event: AdaptedPointerEvent, _force = false) {\n    if (\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.moveToState(State.ACTIVE, event);\n    }\n  }\n\n  public end(event: AdaptedPointerEvent) {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      this.moveToState(State.END, event);\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public isAwaiting(): boolean {\n    return this.awaiting;\n  }\n  public setAwaiting(value: boolean): void {\n    this.awaiting = value;\n  }\n\n  public isActive(): boolean {\n    return this.active;\n  }\n  public setActive(value: boolean): void {\n    this.active = value;\n  }\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public getActivationIndex(): number {\n    return this.activationIndex;\n  }\n  public setActivationIndex(value: number): void {\n    this.activationIndex = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return this.interactionManager.shouldWaitForHandlerFailure(this, handler);\n  }\n\n  public shouldRequireToWaitForFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return this.interactionManager.shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return this.interactionManager.shouldRecognizeSimultaneously(this, handler);\n  }\n\n  public shouldBeCancelledByOther(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return this.interactionManager.shouldHandlerBeCancelledBy(this, handler);\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(_event: AdaptedPointerEvent): void {\n    GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(_event: AdaptedPointerEvent): void {}\n  protected onPointerUp(_event: AdaptedPointerEvent): void {}\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(_event: AdaptedPointerEvent): void {}\n  protected onPointerMove(event: AdaptedPointerEvent): void {\n    this.tryToSendMoveEvent(event, false);\n  }\n  protected onPointerOut(_event: AdaptedPointerEvent): void {}\n  protected onPointerEnter(_event: AdaptedPointerEvent): void {}\n  protected onPointerCancel(_event: AdaptedPointerEvent): void {}\n  protected onPointerOutOfBounds(event: AdaptedPointerEvent): void {\n    this.tryToSendMoveEvent(event, true);\n  }\n  private tryToSendMoveEvent(event: AdaptedPointerEvent, out: boolean): void {\n    if (\n      this.currentState === State.ACTIVE &&\n      (!out || (out && !this.shouldCancellWhenOutside))\n    ) {\n      this.sendEvent(event, this.currentState, this.currentState);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (\n    event: AdaptedPointerEvent,\n    newState: State,\n    oldState: State\n  ): void => {\n    const {\n      onGestureHandlerEvent,\n      onGestureHandlerStateChange,\n    }: PropsRef = this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      event,\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.currentState === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(\n    event: AdaptedPointerEvent,\n    newState: State,\n    oldState: State\n  ): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.getTrackedPointersCount(),\n        state: newState,\n        pointerInside: this.eventManager?.isPointerInBounds({\n          x: event.x,\n          y: event.y,\n        }),\n        ...this.transformNativeEvent(event),\n        handlerTag: this.handlerTag,\n        target: this.ref,\n        oldState: newState !== oldState ? oldState : undefined,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  protected transformNativeEvent(_event: AdaptedPointerEvent) {\n    return {};\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }): void {\n    this.config = { enabled, ...props };\n    this.validateHitSlops();\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(event: AdaptedPointerEvent): boolean {\n    if (!this.config.hitSlop || !this.view) {\n      return true;\n    }\n\n    const width = this.view.getBoundingClientRect().width;\n    const height = this.view.getBoundingClientRect().height;\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = width + this.config.hitSlop.bottom;\n    }\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    if (\n      event.offsetX >= left &&\n      event.offsetX <= right &&\n      event.offsetY >= top &&\n      event.offsetY <= bottom\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  protected resetConfig(): void {}\n\n  //\n  // Getters and setters\n  //\n\n  public getTag(): number {\n    return this.handlerTag;\n  }\n  public setTag(tag: number): void {\n    this.handlerTag = tag;\n  }\n\n  protected getConfig() {\n    return this.config;\n  }\n\n  public getShouldEnableGestureOnSetup(): boolean {\n    throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n  }\n\n  public getView(): HTMLElement | null {\n    return this.view;\n  }\n\n  public getEventManager(): EventManager {\n    return this.eventManager;\n  }\n\n  public getTracker(): PointerTracker {\n    return this.tracker;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.getTrackedPointersID();\n  }\n\n  public getState(): State {\n    return this.currentState;\n  }\n\n  protected setShouldCancelWhenOutside(flag: boolean) {\n    this.shouldCancellWhenOutside = flag;\n  }\n  protected getShouldCancelWhenOutside(): boolean {\n    return this.shouldCancellWhenOutside;\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent) => void)\n    | { __getHandler: () => (event: ResultEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      //Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      //RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"]}